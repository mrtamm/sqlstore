# At the beginning, there may be aliases for full class names.
# These aliases can be used later where full class names are expected.
# Alias declarations begin with an exclamation mark, and cannot contain whitespace.

!Person=ws.rocket.sqlstore.model.Person

# End of aliases. Now to scripts...

###############
# Tables (DDL):
###############

createTablePerson
=======================================
CREATE TABLE person (
  id INT GENERATED ALWAYS AS IDENTITY,
  name VARCHAR(100) NOT NULL,
  date_of_birth DATE NOT NULL,
  active CHAR DEFAULT 'Y' CONSTRAINT c_person_active CHECK (active = 'Y' OR active = 'N'),
  date_created TIMESTAMP NOT NULL,
  created_by INT NOT NULL CONSTRAINT fk_person_created_by REFERENCES person(id),
  date_updated TIMESTAMP,
  updated_by INT CONSTRAINT fk_person_updated_by REFERENCES person(id),
  CONSTRAINT pk_person PRIMARY KEY (id)
)
=======================================


dropTablePerson
=======================================
DROP TABLE person
=======================================


############################
# Data update scripts (DML):
############################

insertPerson IN(Person p) UPDATE(KEYS(ID -> p.id))
=======================================
INSERT INTO person (name, date_of_birth, active, date_created, created_by)
VALUES (?{p.name}, ?{p.dateOfBirth|DATE}, ?{p.active|CHAR}, CURRENT_TIMESTAMP, ?{p.createdBy})
=======================================


updatePerson IN(Person p)
=======================================
UPDATE person
   SET name          = ?{p.name},
       date_of_birth = ?{p.dateOfBirth|DATE},
       active        = ?{p.active|CHAR},
       date_updated  = CURRENT_TIMESTAMP.
       updated_by    = ?{p.updatedBy}
 WHERE id            = ?{p.id}
=======================================


deletePerson IN(Long id)
=======================================
DELETE FROM person WHERE id = ?{id}
=======================================


findPersons
  IN(boolean onlyActive)
  OUT(Person[id,name,dateOfBirth|DATE,active|CHAR,dateCreated,createdBy,dateUpdated,updatedBy])
=======================================
SELECT * FROM person
!(true(onlyActive)){ WHERE active='Y' }
=======================================


findPersonById
  IN(long id)
  OUT(Person[id, name, dateOfBirth|DATE, active|CHAR, dateCreated, createdBy, dateUpdated, updatedBy])
=======================================
SELECT * FROM person WHERE id = ?{id}
=======================================


###########################
# Calling stored functions:
###########################

createSampleFunction
=======================================
CREATE FUNCTION find_date_created(person_id INT) RETURNS TIMESTAMP
  LANGUAGE JAVA
  PARAMETER STYLE JAVA
  RETURNS NULL ON NULL INPUT
  EXTERNAL NAME 'ws.rocket.sqlstore.derby.Functions.findDateCreated'
=======================================


calcDateCreated IN(Long|INTEGER id) OUT(Date|TIMESTAMP date)
=======================================
{?{OUT(date)} = call find_date_created(?{id})}
=======================================


dropSampleFunction
=======================================
DROP FUNCTION find_date_created
=======================================
