!Person=ws.rocket.sqlstore.test.model.Person

createTablePerson {
  CREATE TABLE person (
    id INT GENERATED ALWAYS AS IDENTITY,
    name VARCHAR(100) NOT NULL,
    date_of_birth DATE NOT NULL,
    active CHAR DEFAULT 'Y' CONSTRAINT c_person_active CHECK (active = 'Y' OR active = 'N'),
    date_created TIMESTAMP NOT NULL,
    created_by INT NOT NULL CONSTRAINT fk_person_created_by REFERENCES person(id),
    date_updated TIMESTAMP,
    updated_by INT CONSTRAINT fk_person_updated_by REFERENCES person(id),
    CONSTRAINT pk_person PRIMARY KEY (id)
  )
}

createSampleFunction {
CREATE FUNCTION TO_DEGREES(RADIANS DOUBLE) RETURNS DOUBLE
  PARAMETER STYLE JAVA NO SQL LANGUAGE JAVA
  EXTERNAL NAME 'java.lang.Math.toDegrees'
}

dropTablePerson { DROP TABLE person }

dropSampleFunction { DROP FUNCTION to_degrees }

insertPerson IN(Person p) UPDATE(KEYS(p.id)) {
  INSERT INTO person (name, date_of_birth, active, date_created, created_by)
  VALUES (${p.name}, ${p.dateOfBirth|DATE}, ${p.active|CHAR}, CURRENT_TIMESTAMP, ${p.createdBy})
}

updatePerson IN(Person p) {
  UPDATE person
     SET name          = ${p.name},
         date_of_birth = ${p.dateOfBirth|DATE},
         active        = ${p.active|CHAR},
         date_updated  = CURRENT_TIMESTAMP.
         updated_by    = ${p.updatedBy}
   WHERE id            = ${p.id}
}

deletePerson IN(Long id) {
  DELETE FROM person WHERE id = ${id}
}

findPersons IN(boolean onlyActive)
OUT(Person[id,name,dateOfBirth|DATE,active|CHAR,dateCreated,createdBy,dateUpdated,updatedBy]) {
SELECT * FROM person
!(true(onlyActive)){ WHERE active='Y'}
}

findPersonById
  IN(long id)
  OUT(Person[id,name,dateOfBirth,active,dateCreated,createdBy,dateUpdated,updatedBy])
{
  SELECT * FROM person WHERE id = ${id}
}

calcDateCreated IN(Long id) OUT( Date|TIMESTAMP date ) {
  ${OUT(date)} = call pkg_mine.findDateCreated(${id})
}
